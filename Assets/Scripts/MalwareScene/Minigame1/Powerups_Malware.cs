using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class Powerups_Malware : MonoBehaviour
{
    public enum POWERUP_TYPE
    {
        HEAL = 0,
        UPGRADE_WEAPON,
    }

    public POWERUP_TYPE type;
    public float speed;

    [Header("Powerup SFX")]
    public AudioClip healClip;
    public AudioClip upgradeClip;

    public Canvas renderCanvas;

    public GameObject password, shield;

    // Components
    private MalwareManager_1 sceneManager;

    private bool collected = false;

    private void Start()
    {
        sceneManager = GameObject.FindGameObjectWithTag("GameController").GetComponent<MalwareManager_1>();



        renderCanvas = GameObject.Find("MainCanvas").GetComponent<Canvas>();
    }

    void Update()
    {
        if (!collected)
        {
            transform.position += speed * Time.deltaTime * -transform.right;
        }

        if (transform.position.x <= -10)
        {
            Destroy(gameObject);
        }
    }

    private void OnTriggerEnter2D(Collider2D other)
    {
        if (!other.gameObject.CompareTag("Player"))
        {
            return;
        }

        if (!sceneManager.gameStarted)
        {
            return;
        }

        if (collected)
        {
            return;
        }

        switch (type)
        {
            case POWERUP_TYPE.HEAL:
                sceneManager.playerController.health += 1;

                //StartCoroutine(TextTrigger(shield));
                TextTrigger(shield);

                sceneManager.audioManager.Play(healClip);
                break;

            case POWERUP_TYPE.UPGRADE_WEAPON:
                if (sceneManager.playerController.weaponID + 1 < 3)
                {
                    sceneManager.playerController.weaponID += 1;
                }

                //StartCoroutine(TextTrigger(password));'
                TextTrigger(password);

                sceneManager.audioManager.Play(upgradeClip);
                break;
        }

        StartCoroutine(PowerupCollected());
    }

    public void TextTrigger(GameObject textObject)
    {
        GameObject textEffect = Instantiate(textObject, new Vector3(0, 0, 0), Quaternion.identity);
        textEffect.transform.SetParent(renderCanvas.transform);
        textEffect.transform.localScale = new Vector3(0, 0, 0);
        LeanTween.scale(textEffect, new Vector3(1f, 1f, 1f), 0.5f).setEaseOutBounce();
        // Text UI is moved to worldspace of (powerup position + offset)
        textEffect.transform.position = RectTransformUtility.WorldToScreenPoint(Camera.main, transform.position + new Vector3(0, 1));

        Destroy(textEffect, 1.0f);
    }

    //private IEnumerator TextTrigger(GameObject textObject)
    //{
    //    GameObject textEffect = Instantiate(textObject, new Vector3(0, 0, 0), Quaternion.identity);
    //    textEffect.transform.SetParent(renderCanvas.transform);
    //    textEffect.transform.localScale = new Vector3(0, 0, 0);
    //    LeanTween.scale(textEffect, new Vector3(1f, 1f, 1f), 0.5f).setEaseOutBounce();
    //    // Text UI is moved to worldspace of (powerup position + offset)
    //    textEffect.transform.position = RectTransformUtility.WorldToScreenPoint(Camera.main, transform.position + new Vector3(0, 1));

    //    yield return new WaitForSeconds(1);
    //    Destroy(textEffect);
    //}

    private IEnumerator PowerupCollected()
    {
        collected = true;
        gameObject.GetComponent<Animator>().SetTrigger("isCollected");

        yield return new WaitForSeconds(0.75f);

        Destroy(gameObject);
    }
}