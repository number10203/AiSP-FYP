using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using TMPro;

public class MalwareManager_2 : MonoBehaviour
{
    [SerializeField] private GameObject winCutscene, loseCutscene;

    public TextMeshProUGUI scoreText, endScoreText;

    public GameObject[] stars;

    public GameObject confettiParticle, infographicObject, infographicImage, stripesGameobject, captions;
    public GameObject FadeIn, FadeOut;
    public Sprite[] infographicLanguages;

    public Slider scoreSlider;

    public AudioClip BGM, starPop1, starPop2, starPop3, starEnd;

    [HideInInspector] public int score, localScore = 0;
    [HideInInspector] public Vector3 trashbinPos;
    [HideInInspector] public int correntAns = 0, wrongAns = 0;

    [HideInInspector] public bool isWin = false, isLose = false;

    public GameObject endPanel;

    public bool cutscenePlayed = false;

    private bool star1Anim = false, star2Anim = false, star3Anim = false, gameEnded = false, starPlay = false;

    // Components
    internal InstructionsManager instructionsManager;
    internal AudioManager audioManager;
    internal CutsceneSubtitleManager subtitleManager;

    internal int qnNumber = 0;
    private int languageNumber;

    // Start is called before the first frame update
    void Start()
    {
        StartCoroutine(StartFadeOut());
        captions.SetActive(false);
        Time.timeScale = 1;
        endPanel.SetActive(false);
        infographicObject.SetActive(false);
        score = GameManager.INSTANCE.currentMalwareScore;
        trashbinPos = GameObject.Find("Trashbin").transform.position;

        instructionsManager = GetComponent<InstructionsManager>();
        instructionsManager.StartInstructions();

        audioManager = GetComponent<AudioManager>();
        audioManager.PlayMusic(BGM);

        subtitleManager = GetComponent<CutsceneSubtitleManager>();

        if (GameManager.INSTANCE.chosenLanguage == GameManager.LANGUAGE.CHINESE)
        {
            languageNumber = 1;
            infographicImage.GetComponent<Image>().sprite = infographicLanguages[languageNumber];
        }
        else if (GameManager.INSTANCE.chosenLanguage == GameManager.LANGUAGE.MALAY)
        {
            languageNumber = 2;
            infographicImage.GetComponent<Image>().sprite = infographicLanguages[languageNumber];
        }
        else if (GameManager.INSTANCE.chosenLanguage == GameManager.LANGUAGE.TAMIL)
        {
            languageNumber = 3;
            infographicImage.GetComponent<Image>().sprite = infographicLanguages[languageNumber];
        }
        else
        {
            languageNumber = 0;
            infographicImage.GetComponent<Image>().sprite = infographicLanguages[languageNumber];
        }
    }

    // Update is called once per frame
    void Update()
    {
        // If game has not end yet
        if (!isWin && !isLose)
        {
            if (GameManager.INSTANCE.chosenLanguage == GameManager.LANGUAGE.CHINESE)
            {
                scoreText.text = "分数: " + score;
            }
            else if (GameManager.INSTANCE.chosenLanguage == GameManager.LANGUAGE.MALAY)
            {
                scoreText.text = "Skor: " + score;
            }
            else if (GameManager.INSTANCE.chosenLanguage == GameManager.LANGUAGE.TAMIL)
            {
                scoreText.text = "மதிப்பெண்: " + score;
            }
            else
            {
                scoreText.text = "Score: " + score;
            }
        }
        else
        {
            if (!cutscenePlayed)
            {
                captions.SetActive(true);
                if (isWin)
                {
                    if (GameManager.INSTANCE.chosenLanguage == GameManager.LANGUAGE.CHINESE)
                    {
                        subtitleManager.InitSubtitles("Ethan_Cutscene3_Chinese");
                    }
                    else if (GameManager.INSTANCE.chosenLanguage == GameManager.LANGUAGE.MALAY)
                    {
                        subtitleManager.InitSubtitles("Ethan_Cutscene3_Malay");
                    }
                    else if (GameManager.INSTANCE.chosenLanguage == GameManager.LANGUAGE.TAMIL)
                    {
                        subtitleManager.InitSubtitles("Ethan_Cutscene3_Tamil");
                    }
                    else
                    {
                        subtitleManager.InitSubtitles("Ethan_Cutscene3_Eng");
                    }
                    winCutscene.SetActive(true);
                }
                else if (isLose)
                {
                    if (GameManager.INSTANCE.chosenLanguage == GameManager.LANGUAGE.CHINESE)
                    {
                        subtitleManager.InitSubtitles("Ethan_Cutscene2_Chinese");
                    }
                    else if (GameManager.INSTANCE.chosenLanguage == GameManager.LANGUAGE.MALAY)
                    {
                        subtitleManager.InitSubtitles("Ethan_Cutscene2_Malay");
                    }
                    else if (GameManager.INSTANCE.chosenLanguage == GameManager.LANGUAGE.TAMIL)
                    {
                        subtitleManager.InitSubtitles("Ethan_Cutscene2_Tamil");
                    }
                    else
                    {
                        subtitleManager.InitSubtitles("Ethan_Cutscene2_Eng");
                    }
                    loseCutscene.SetActive(true);
                }
                audioManager.StopMusic();
            }
            else
            {
                gameEnded = true;
                endPanel.SetActive(gameEnded);

                if (score > GameManager.INSTANCE.globalMalwareScore)
                {
                    GameManager.INSTANCE.globalMalwareScore = score;
                }

                // Star Scoring system
                if (localScore >= 900)
                {
                    if (star3Anim != true)
                    {
                        stars[2].SetActive(true);
                        stars[2].LeanScale(new Vector3(1, 1, 1), 1.0f).setEaseOutExpo();
                        star3Anim = true;

                        audioManager.PlayAndGetObject(starPop3);
                    }
                }
                else if (localScore >= 750)
                {
                    if (star2Anim != true)
                    {
                        stars[1].SetActive(true);
                        stars[1].LeanScale(new Vector3(1, 1, 1), 1.0f).setEaseOutExpo();
                        star2Anim = true;

                        audioManager.PlayAndGetObject(starPop2);
                    }
                }
                else if (localScore >= 600)
                {
                    if (star1Anim != true)
                    {
                        stars[0].SetActive(true);
                        stars[0].LeanScale(new Vector3(1, 1, 1), 1.0f).setEaseOutExpo();
                        star1Anim = true;

                        audioManager.PlayAndGetObject(starPop1);
                    }
                }
            }
        }
    }

    private void FixedUpdate()
    {
        // Do only when game has ended
        if (gameEnded)
        {
            // Do a fixed counter up for displaying score at end
            stripesGameobject.transform.localRotation *= Quaternion.Euler(0, 0, -1);
            if (GameManager.INSTANCE.chosenLanguage == GameManager.LANGUAGE.CHINESE)
            {
                endScoreText.text = "总分: " + localScore;
            }
            else if (GameManager.INSTANCE.chosenLanguage == GameManager.LANGUAGE.MALAY)
            {
                endScoreText.text = "Jumlah skor: " + localScore;
            }
            else if (GameManager.INSTANCE.chosenLanguage == GameManager.LANGUAGE.TAMIL)
            {
                endScoreText.text = "ெமாத்த மதிப்பெண்: " + localScore;
            }
            else
            {
                endScoreText.text = "Total Score: " + localScore;
            }

            if (localScore != score)
            {
                localScore += 10;

                scoreSlider.value = Mathf.Lerp(600, localScore, 1.0f);
            }
            else
            {
                if (score >= 600)
                {
                    confettiParticle.SetActive(true);

                    if (!starPlay)
                    {
                        audioManager.PlayAndGetObject(starEnd);
                        starPlay = true;
                    }
                }
            }
        }
    }

    private IEnumerator StartFadeOut()
    {
        FadeOut.SetActive(true);

        yield return new WaitForSeconds(1f);

        FadeOut.SetActive(false);
    }

    public void ShowInfoGraphic()
    {
        infographicObject.SetActive(true);
    }

    public void BackToMainMenu()
    {
        SceneController.INSTANCE.LoadScene(1);
    }

    public void RestartLevel()
    {
        SceneController.INSTANCE.Retry();
    }
}
